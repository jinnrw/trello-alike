{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/Jinn/Documents/Works/2019/trello-alike/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _toConsumableArray from\"/Users/Jinn/Documents/Works/2019/trello-alike/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    padding: 0 4px;\\n\\n\\n\\n    .list-card {\\n        padding: 5px;\\n        background-color: #fff;\\n        border-radius: 3px;\\n        box-shadow: 0 1px 0 rgba(9,30,66,.25);\\n        cursor: pointer;\\n        display: block;\\n        margin-bottom: 8px;\\n        max-width: 300px;\\n        min-height: 20px;\\n        position: relative;\\n        text-decoration: none;\\n        z-index: 0;\\n    }\\n\\n    textarea {\\n        width: 100%;\\n        resize: none;\\n        background: none;\\n        border: none;\\n        box-shadow: none;\\n        height: auto;\\n        margin-bottom: 4px;\\n        max-height: 162px;\\n        min-height: 54px;\\n        overflow-y: auto;\\n    }\\n\\n    .composer-controls {\\n        display: flex;\\n\\n        > * {\\n            margin-right: 6px;\\n        }\\n    }\\n\\n\\n\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useRef}from'react';import styled from\"styled-components\";import{Button,ButtonClose}from\"../styled-components/Buttons\";var CardComposer=function CardComposer(props){var textareaRef=useRef();function closeComposer(){props.setIsComposing(false);}function addNewCard(){if(!(textareaRef.current.value===\"\")){var newCard={title:textareaRef.current.value,completed:false};var newcardItems=[].concat(_toConsumableArray(props.cardItems),[newCard]);props.setCardItems(newcardItems);closeComposer();}}function onkeydownTextArea(e){if(e.keyCode===13){addNewCard();e.preventDefault();}}return React.createElement(StyledCardComposer,null,React.createElement(\"div\",{className:\"list-card\"},React.createElement(\"textarea\",{ref:textareaRef,placeholder:\"Enter a title for this card\\u2026\",onKeyDown:function onKeyDown(e){onkeydownTextArea(e);}})),React.createElement(\"div\",{className:\"composer-controls\"},React.createElement(Button,{onClick:addNewCard},\"Add Card\"),React.createElement(ButtonClose,{onClick:closeComposer},\"\\u2716\")));};var StyledCardComposer=styled.div(_templateObject());export default CardComposer;","map":{"version":3,"sources":["/Users/Jinn/Documents/Works/2019/trello-alike/client/src/components/CardComposer.js"],"names":["React","useRef","styled","Button","ButtonClose","CardComposer","props","textareaRef","closeComposer","setIsComposing","addNewCard","current","value","newCard","title","completed","newcardItems","cardItems","setCardItems","onkeydownTextArea","e","keyCode","preventDefault","StyledCardComposer","div"],"mappings":"stCAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,MAAT,CAAiBC,WAAjB,KAAoC,8BAApC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5B,GAAIC,CAAAA,WAAW,CAAGN,MAAM,EAAxB,CAEA,QAASO,CAAAA,aAAT,EAAyB,CACrBF,KAAK,CAACG,cAAN,CAAqB,KAArB,EACH,CAED,QAASC,CAAAA,UAAT,EAAsB,CAClB,GAAI,EAAEH,WAAW,CAACI,OAAZ,CAAoBC,KAApB,GAA8B,EAAhC,CAAJ,CAA0C,CACtC,GAAIC,CAAAA,OAAO,CAAG,CACVC,KAAK,CAAEP,WAAW,CAACI,OAAZ,CAAoBC,KADjB,CAEVG,SAAS,CAAE,KAFD,CAAd,CAIA,GAAIC,CAAAA,YAAY,8BAAOV,KAAK,CAACW,SAAb,GAAwBJ,OAAxB,EAAhB,CAEAP,KAAK,CAACY,YAAN,CAAmBF,YAAnB,EACAR,aAAa,GAChB,CACJ,CAED,QAASW,CAAAA,iBAAT,CAA2BC,CAA3B,CAA8B,CAC1B,GAAIA,CAAC,CAACC,OAAF,GAAc,EAAlB,CAAsB,CAClBX,UAAU,GACVU,CAAC,CAACE,cAAF,GACH,CACJ,CAED,MACI,qBAAC,kBAAD,MACI,2BAAK,SAAS,CAAC,WAAf,EACI,gCACA,GAAG,CAAEf,WADL,CAEA,WAAW,CAAC,mCAFZ,CAGA,SAAS,CAAE,mBAACa,CAAD,CAAO,CAACD,iBAAiB,CAACC,CAAD,CAAjB,CAAqB,CAHxC,EADJ,CADJ,CAOI,2BAAK,SAAS,CAAC,mBAAf,EACI,oBAAC,MAAD,EAAQ,OAAO,CAAEV,UAAjB,aADJ,CAEI,oBAAC,WAAD,EAAa,OAAO,CAAEF,aAAtB,WAFJ,CAPJ,CADJ,CAeH,CA1CD,CA4CA,GAAMe,CAAAA,kBAAkB,CAAGrB,MAAM,CAACsB,GAAV,mBAAxB,CA6CA,cAAenB,CAAAA,YAAf","sourcesContent":["import React, { useRef } from 'react';\nimport styled from \"styled-components\";\nimport { Button, ButtonClose } from \"../styled-components/Buttons\"\n\nconst CardComposer = (props) => {\n    let textareaRef = useRef();\n\n    function closeComposer() {\n        props.setIsComposing(false);\n    }\n\n    function addNewCard() {\n        if (!(textareaRef.current.value === \"\"))  {\n            let newCard = {\n                title: textareaRef.current.value,\n                completed: false\n            };\n            let newcardItems = [...props.cardItems, newCard];\n\n            props.setCardItems(newcardItems);\n            closeComposer();    \n        }\n    }\n\n    function onkeydownTextArea(e) {\n        if (e.keyCode === 13) {\n            addNewCard();\n            e.preventDefault();\n        }\n    }\n\n    return (\n        <StyledCardComposer>\n            <div className=\"list-card\">\n                <textarea \n                ref={textareaRef} \n                placeholder=\"Enter a title for this cardâ€¦\"\n                onKeyDown={(e) => {onkeydownTextArea(e)}}></textarea>\n            </div>\n            <div className=\"composer-controls\">\n                <Button onClick={addNewCard}>Add Card</Button>\n                <ButtonClose onClick={closeComposer}>&#10006;</ButtonClose>\n            </div>\n\n        </StyledCardComposer>\n    )\n}\n\nconst StyledCardComposer = styled.div`\n    padding: 0 4px;\n\n\n\n    .list-card {\n        padding: 5px;\n        background-color: #fff;\n        border-radius: 3px;\n        box-shadow: 0 1px 0 rgba(9,30,66,.25);\n        cursor: pointer;\n        display: block;\n        margin-bottom: 8px;\n        max-width: 300px;\n        min-height: 20px;\n        position: relative;\n        text-decoration: none;\n        z-index: 0;\n    }\n\n    textarea {\n        width: 100%;\n        resize: none;\n        background: none;\n        border: none;\n        box-shadow: none;\n        height: auto;\n        margin-bottom: 4px;\n        max-height: 162px;\n        min-height: 54px;\n        overflow-y: auto;\n    }\n\n    .composer-controls {\n        display: flex;\n\n        > * {\n            margin-right: 6px;\n        }\n    }\n\n\n\n`\n\nexport default CardComposer;"]},"metadata":{},"sourceType":"module"}