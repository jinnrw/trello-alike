{"ast":null,"code":"import _slicedToArray from \"/Users/Jinn/Documents/Works/2019/trello-alike/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jinn/Documents/Works/2019/trello-alike/src/components/CardItems.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport TextArea from \"../styled-components/TextArea\";\nimport { Button } from \"../styled-components/Buttons\";\n\nconst CardItems = props => {\n  // init states\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isEditingCard = _useState2[0],\n        setIsEditingCard = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentEditingIndex = _useState4[0],\n        setCurrentEditingIndex = _useState4[1];\n\n  const _useState5 = useState([...props.cardItems]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newCardItems = _useState6[0],\n        setNewCardItems = _useState6[1];\n\n  useEffect(() => {\n    if (isEditingCard && !(currentEditingIndex === null)) {\n      quickEditorTextarea.current.focus();\n      quickEditorTextarea.current.value = props.cardItems[currentEditingIndex].title;\n    }\n  }, [currentEditingIndex]);\n  let quickEditorTextarea = useRef();\n\n  function editCardTitle(index) {\n    if (!isEditingCard) {\n      setIsEditingCard(true);\n      setCurrentEditingIndex(index);\n    }\n  }\n\n  function updateCardItem(e) {\n    quickEditorTextarea.current.value = e.target.value;\n  }\n\n  function onkeydownTextArea(e, index) {\n    if (e.keyCode === 13) {\n      saveEditor();\n      e.preventDefault();\n    } else if (e.keyCode === 27) {\n      // Escape key\n      cancelEditor();\n      e.preventDefault();\n    }\n  }\n\n  function saveEditor() {\n    newCardItems[currentEditingIndex].title = quickEditorTextarea.current.value;\n    setNewCardItems(newCardItems);\n    setIsEditingCard(false);\n    setCurrentEditingIndex(null);\n  }\n\n  function cancelEditor() {\n    // return previous state\n    setNewCardItems(prev => prev);\n    setIsEditingCard(false);\n    setCurrentEditingIndex(null);\n  }\n\n  const singleCardItem = (item, index) => React.createElement(\"div\", {\n    className: \"list-card\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-card-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, item.title), React.createElement(\"div\", {\n    className: \"edit-card\",\n    onClick: () => {\n      editCardTitle(index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n\n  const quickEditor = index => React.createElement(\"div\", {\n    className: \"quick-card-editor\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    ref: quickEditorTextarea,\n    onChange: e => {\n      updateCardItem(e);\n    },\n    onKeyDown: e => {\n      onkeydownTextArea(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => {\n      saveEditor();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Save\")); // Return all card items\n\n\n  const cardItems = props.cardItems.map((item, index) => isEditingCard ? index === currentEditingIndex ? quickEditor(index) : singleCardItem(item, index) : singleCardItem(item, index));\n  return React.createElement(StyledCardItems, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, cardItems);\n};\n\nconst StyledCardItems = styled.div`\n    flex: 1 1 auto;\n    margin-bottom: 0;\n    overflow-y: auto;\n    overflow-x: hidden;\n    padding: 0 4px;\n    z-index: 1;\n    min-height: 0;\n\n    .list-card {\n        background-color: #fff;\n        border-radius: 3px;\n        box-shadow: 0 1px 0 rgba(9,30,66,.25);\n        cursor: pointer;\n        display: block;\n        margin-bottom: 8px;\n        max-width: 300px;\n        min-height: 20px;\n        position: relative;\n        text-decoration: none;\n        z-index: 0;\n\n        &:hover {\n            background-color: #f4f5f7;\n        }\n\n        &:hover .edit-card {\n            display: block;\n        }\n    }\n\n    .list-card-detail {\n        display: flex;\n        justify-content: space-between;\n        padding: 6px 8px;\n        margin: 0 0 4px;\n        overflow: hidden;\n        text-decoration: none;\n        word-wrap: break-word;\n    }\n\n    .edit-card {\n        display: none;\n        width: 20px;\n        height: 20px;\n        background-color: #f4f5f7;\n        background-clip: padding-box;\n        background-origin: padding-box;\n        border-radius: 3px;\n        opacity: .8;\n        padding: 4px;\n        position: absolute;\n        right: 2px;\n        top: 2px;\n        background: url(./icon-pencil.svg) 50% 50% no-repeat;\n        background-size: 16px;\n\n        &:hover {\n            background-color: #ebecf0;\n            opacity: 1;\n        }\n    }\n\n    .quick-card-editor {\n        overflow: hidden;\n        overflow-wrap: break-word;\n        resize: none;\n        background: #ebecf0;\n        \n        button {\n            margin: 8px;\n        }\n    }\n\n`;\nexport default CardItems;","map":{"version":3,"sources":["/Users/Jinn/Documents/Works/2019/trello-alike/src/components/CardItems.js"],"names":["React","useRef","useState","useEffect","styled","TextArea","Button","CardItems","props","isEditingCard","setIsEditingCard","currentEditingIndex","setCurrentEditingIndex","cardItems","newCardItems","setNewCardItems","quickEditorTextarea","current","focus","value","title","editCardTitle","index","updateCardItem","e","target","onkeydownTextArea","keyCode","saveEditor","preventDefault","cancelEditor","prev","singleCardItem","item","quickEditor","map","StyledCardItems","div"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport TextArea from \"../styled-components/TextArea\"\nimport { Button } from \"../styled-components/Buttons\"\n\nconst CardItems = (props) => {\n    // init states\n    const [isEditingCard, setIsEditingCard] = useState(false);\n    const [currentEditingIndex, setCurrentEditingIndex] = useState(null);\n    const [newCardItems, setNewCardItems] = useState([...props.cardItems]);\n\n    useEffect(() => {\n        if (isEditingCard && !(currentEditingIndex === null)) {\n            quickEditorTextarea.current.focus();\n            quickEditorTextarea.current.value = props.cardItems[currentEditingIndex].title;\n        }\n    }, [currentEditingIndex])\n\n    let quickEditorTextarea = useRef();\n\n    function editCardTitle(index) {\n        if (!isEditingCard) {\n            setIsEditingCard(true);\n            setCurrentEditingIndex(index);\n        }\n    }\n\n    function updateCardItem(e) {\n        quickEditorTextarea.current.value = e.target.value;\n    }\n\n    function onkeydownTextArea(e, index) {\n        if (e.keyCode === 13) {\n            saveEditor();\n            e.preventDefault();\n        } else if (e.keyCode === 27) { // Escape key\n            cancelEditor();\n            e.preventDefault();\n        }\n\n    }\n\n    function saveEditor() {\n        newCardItems[currentEditingIndex].title = quickEditorTextarea.current.value\n        setNewCardItems(newCardItems);\n        setIsEditingCard(false);\n        setCurrentEditingIndex(null);\n    }\n\n    function cancelEditor() {\n        // return previous state\n        setNewCardItems(prev => prev);\n        setIsEditingCard(false);\n        setCurrentEditingIndex(null);\n    }\n\n    const singleCardItem = (item, index) =>\n        (<div className=\"list-card\" key={index} >\n            <div className=\"list-card-detail\">\n                <div>{item.title}</div>\n                <div className=\"edit-card\"\n                    onClick={() => {\n                        editCardTitle(index);\n                    }}>\n                </div>\n            </div>\n        </div >)\n\n    const quickEditor = (index) =>\n        (<div className=\"quick-card-editor\" key={index}>\n            <TextArea\n                ref={quickEditorTextarea}\n                onChange={(e) => {\n                    updateCardItem(e);\n                }}\n                onKeyDown={(e) => {\n                    onkeydownTextArea(e)\n                }} />\n            <Button onClick={() => { saveEditor() }}>Save</Button>\n        </div>)\n\n\n    // Return all card items\n    const cardItems = props.cardItems.map((item, index) =>\n        (isEditingCard ?\n            (index === currentEditingIndex ?\n                quickEditor(index) :\n                singleCardItem(item, index)\n            )\n            : singleCardItem(item, index)\n        )\n    )\n\n    return (\n        <StyledCardItems>\n            {cardItems}\n        </StyledCardItems>\n    )\n}\n\nconst StyledCardItems = styled.div`\n    flex: 1 1 auto;\n    margin-bottom: 0;\n    overflow-y: auto;\n    overflow-x: hidden;\n    padding: 0 4px;\n    z-index: 1;\n    min-height: 0;\n\n    .list-card {\n        background-color: #fff;\n        border-radius: 3px;\n        box-shadow: 0 1px 0 rgba(9,30,66,.25);\n        cursor: pointer;\n        display: block;\n        margin-bottom: 8px;\n        max-width: 300px;\n        min-height: 20px;\n        position: relative;\n        text-decoration: none;\n        z-index: 0;\n\n        &:hover {\n            background-color: #f4f5f7;\n        }\n\n        &:hover .edit-card {\n            display: block;\n        }\n    }\n\n    .list-card-detail {\n        display: flex;\n        justify-content: space-between;\n        padding: 6px 8px;\n        margin: 0 0 4px;\n        overflow: hidden;\n        text-decoration: none;\n        word-wrap: break-word;\n    }\n\n    .edit-card {\n        display: none;\n        width: 20px;\n        height: 20px;\n        background-color: #f4f5f7;\n        background-clip: padding-box;\n        background-origin: padding-box;\n        border-radius: 3px;\n        opacity: .8;\n        padding: 4px;\n        position: absolute;\n        right: 2px;\n        top: 2px;\n        background: url(./icon-pencil.svg) 50% 50% no-repeat;\n        background-size: 16px;\n\n        &:hover {\n            background-color: #ebecf0;\n            opacity: 1;\n        }\n    }\n\n    .quick-card-editor {\n        overflow: hidden;\n        overflow-wrap: break-word;\n        resize: none;\n        background: #ebecf0;\n        \n        button {\n            margin: 8px;\n        }\n    }\n\n`\n\nexport default CardItems;"]},"metadata":{},"sourceType":"module"}