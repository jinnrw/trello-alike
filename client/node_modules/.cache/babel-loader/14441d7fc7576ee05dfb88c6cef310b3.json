{"ast":null,"code":"var _jsxFileName = \"/Users/Jinn/Documents/Works/2019/trello-alike/client/src/components/CardComposer.js\";\nimport React, { useRef } from 'react';\nimport styled from \"styled-components\";\nimport { Button, ButtonClose } from \"../styled-components/Buttons\";\n\nconst CardComposer = props => {\n  let textareaRef = useRef();\n\n  function closeComposer() {\n    props.setIsComposing(false);\n  }\n\n  function addNewCard() {\n    if (!(textareaRef.current.value === \"\")) {\n      let newCard = {\n        title: textareaRef.current.value,\n        completed: false\n      };\n      let newcardItems = [...props.cardItems, newCard];\n      props.setCardItems(newcardItems);\n      closeComposer();\n    }\n  }\n\n  function onkeydownTextArea(e) {\n    if (e.keyCode === 13) {\n      addNewCard();\n      e.preventDefault();\n    }\n  }\n\n  return React.createElement(StyledCardComposer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    ref: textareaRef,\n    placeholder: \"Enter a title for this card\\u2026\",\n    onKeyDown: e => {\n      onkeydownTextArea(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"composer-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: addNewCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Add Card\"), React.createElement(ButtonClose, {\n    onClick: closeComposer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\\u2716\")));\n};\n\nconst StyledCardComposer = styled.div`\n    padding: 0 4px;\n\n\n\n    .list-card {\n        padding: 5px;\n        background-color: #fff;\n        border-radius: 3px;\n        box-shadow: 0 1px 0 rgba(9,30,66,.25);\n        cursor: pointer;\n        display: block;\n        margin-bottom: 8px;\n        max-width: 300px;\n        min-height: 20px;\n        position: relative;\n        text-decoration: none;\n        z-index: 0;\n    }\n\n    textarea {\n        width: 100%;\n        resize: none;\n        background: none;\n        border: none;\n        box-shadow: none;\n        height: auto;\n        margin-bottom: 4px;\n        max-height: 162px;\n        min-height: 54px;\n        overflow-y: auto;\n    }\n\n    .composer-controls {\n        display: flex;\n\n        > * {\n            margin-right: 6px;\n        }\n    }\n\n\n\n`;\nexport default CardComposer;","map":{"version":3,"sources":["/Users/Jinn/Documents/Works/2019/trello-alike/client/src/components/CardComposer.js"],"names":["React","useRef","styled","Button","ButtonClose","CardComposer","props","textareaRef","closeComposer","setIsComposing","addNewCard","current","value","newCard","title","completed","newcardItems","cardItems","setCardItems","onkeydownTextArea","e","keyCode","preventDefault","StyledCardComposer","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,8BAApC;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,MAAIC,WAAW,GAAGN,MAAM,EAAxB;;AAEA,WAASO,aAAT,GAAyB;AACrBF,IAAAA,KAAK,CAACG,cAAN,CAAqB,KAArB;AACH;;AAED,WAASC,UAAT,GAAsB;AAClB,QAAI,EAAEH,WAAW,CAACI,OAAZ,CAAoBC,KAApB,KAA8B,EAAhC,CAAJ,EAA0C;AACtC,UAAIC,OAAO,GAAG;AACVC,QAAAA,KAAK,EAAEP,WAAW,CAACI,OAAZ,CAAoBC,KADjB;AAEVG,QAAAA,SAAS,EAAE;AAFD,OAAd;AAIA,UAAIC,YAAY,GAAG,CAAC,GAAGV,KAAK,CAACW,SAAV,EAAqBJ,OAArB,CAAnB;AAEAP,MAAAA,KAAK,CAACY,YAAN,CAAmBF,YAAnB;AACAR,MAAAA,aAAa;AAChB;AACJ;;AAED,WAASW,iBAAT,CAA2BC,CAA3B,EAA8B;AAC1B,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AAClBX,MAAAA,UAAU;AACVU,MAAAA,CAAC,CAACE,cAAF;AACH;AACJ;;AAED,SACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,GAAG,EAAEf,WADL;AAEA,IAAA,WAAW,EAAC,mCAFZ;AAGA,IAAA,SAAS,EAAGa,CAAD,IAAO;AAACD,MAAAA,iBAAiB,CAACC,CAAD,CAAjB;AAAqB,KAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEV,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEF,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAPJ,CADJ;AAeH,CA1CD;;AA4CA,MAAMe,kBAAkB,GAAGrB,MAAM,CAACsB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAtC;AA6CA,eAAenB,YAAf","sourcesContent":["import React, { useRef } from 'react';\nimport styled from \"styled-components\";\nimport { Button, ButtonClose } from \"../styled-components/Buttons\"\n\nconst CardComposer = (props) => {\n    let textareaRef = useRef();\n\n    function closeComposer() {\n        props.setIsComposing(false);\n    }\n\n    function addNewCard() {\n        if (!(textareaRef.current.value === \"\"))  {\n            let newCard = {\n                title: textareaRef.current.value,\n                completed: false\n            };\n            let newcardItems = [...props.cardItems, newCard];\n\n            props.setCardItems(newcardItems);\n            closeComposer();    \n        }\n    }\n\n    function onkeydownTextArea(e) {\n        if (e.keyCode === 13) {\n            addNewCard();\n            e.preventDefault();\n        }\n    }\n\n    return (\n        <StyledCardComposer>\n            <div className=\"list-card\">\n                <textarea \n                ref={textareaRef} \n                placeholder=\"Enter a title for this cardâ€¦\"\n                onKeyDown={(e) => {onkeydownTextArea(e)}}></textarea>\n            </div>\n            <div className=\"composer-controls\">\n                <Button onClick={addNewCard}>Add Card</Button>\n                <ButtonClose onClick={closeComposer}>&#10006;</ButtonClose>\n            </div>\n\n        </StyledCardComposer>\n    )\n}\n\nconst StyledCardComposer = styled.div`\n    padding: 0 4px;\n\n\n\n    .list-card {\n        padding: 5px;\n        background-color: #fff;\n        border-radius: 3px;\n        box-shadow: 0 1px 0 rgba(9,30,66,.25);\n        cursor: pointer;\n        display: block;\n        margin-bottom: 8px;\n        max-width: 300px;\n        min-height: 20px;\n        position: relative;\n        text-decoration: none;\n        z-index: 0;\n    }\n\n    textarea {\n        width: 100%;\n        resize: none;\n        background: none;\n        border: none;\n        box-shadow: none;\n        height: auto;\n        margin-bottom: 4px;\n        max-height: 162px;\n        min-height: 54px;\n        overflow-y: auto;\n    }\n\n    .composer-controls {\n        display: flex;\n\n        > * {\n            margin-right: 6px;\n        }\n    }\n\n\n\n`\n\nexport default CardComposer;"]},"metadata":{},"sourceType":"module"}