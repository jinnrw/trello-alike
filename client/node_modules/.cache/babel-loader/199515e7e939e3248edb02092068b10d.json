{"ast":null,"code":"import _slicedToArray from \"/Users/Jinn/Documents/Works/2019/trello-alike/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jinn/Documents/Works/2019/trello-alike/client/src/components/BoardHeader.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\"; // The styled method works perfectly on all of your own or any third-party component, as long as they attach the passed className prop to a DOM element.\n\nconst BoardHeaderDiv = ({\n  className\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        res = _useState2[0],\n        setRes = _useState2[1]; // componentDidmount\n\n\n  useEffect(() => {\n    fetch('/api').then(res => res.json()).then(data => {\n      // setRes(data);\n      console.log(data);\n    });\n  });\n  return React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"board-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, res.title)));\n};\n\nconst BoardHeader = styled(BoardHeaderDiv)`\n    display: flex;\n    padding: 8px 4px 4px 8px;\n\n    .board-title {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 700;\n        line-height: 32px;\n        padding: 0 12px;\n    }\n`;\nexport default BoardHeader;","map":{"version":3,"sources":["/Users/Jinn/Documents/Works/2019/trello-alike/client/src/components/BoardHeader.js"],"names":["React","useState","useEffect","styled","BoardHeaderDiv","className","res","setRes","fetch","then","json","data","console","log","title","BoardHeader"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA,oBAChBJ,QAAQ,CAAC,EAAD,CADQ;AAAA;AAAA,QAC/BK,GAD+B;AAAA,QAC1BC,MAD0B,kBAGtC;;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAAC,MAAD,CAAL,CACKC,IADL,CACUH,GAAG,IAAIA,GAAG,CAACI,IAAJ,EADjB,EAEKD,IAFL,CAEUE,IAAI,IAAI;AACV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KALL;AAMH,GAPQ,CAAT;AASA,SACI;AAAK,IAAA,SAAS,EAAEN,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BC,GAAG,CAACQ,KAAnC,CADJ,CADJ,CADJ;AAOH,CApBD;;AAsBA,MAAMC,WAAW,GAAGZ,MAAM,CAACC,cAAD,CAAiB;;;;;;;;;;;CAA3C;AAaA,eAAeW,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styled from \"styled-components\";\n\n// The styled method works perfectly on all of your own or any third-party component, as long as they attach the passed className prop to a DOM element.\nconst BoardHeaderDiv = ({ className }) => {\n    const [res, setRes] = useState({});\n\n    // componentDidmount\n    useEffect(() => {\n        fetch('/api')\n            .then(res => res.json())\n            .then(data => {\n                // setRes(data);\n                console.log(data);\n            })\n    })\n\n    return (\n        <div className={className}>\n            <div>\n                <span className=\"board-title\">{res.title}</span>\n            </div>\n        </div>\n    )\n}\n\nconst BoardHeader = styled(BoardHeaderDiv)`\n    display: flex;\n    padding: 8px 4px 4px 8px;\n\n    .board-title {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 700;\n        line-height: 32px;\n        padding: 0 12px;\n    }\n`\n\nexport default BoardHeader;"]},"metadata":{},"sourceType":"module"}