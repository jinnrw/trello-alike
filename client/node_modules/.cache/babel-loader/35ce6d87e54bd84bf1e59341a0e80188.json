{"ast":null,"code":"var _jsxFileName = \"/Users/Jinn/Documents/Works/2019/trello-alike/src/components/CardItems.js\";\nimport React from 'react';\nimport styled from \"styled-components\"; // The styled method works perfectly on all of your own or any third-party component, as long as they attach the passed className prop to a DOM element.\n\nconst CardItems = props => {\n  const cardItems = props.cardItems.map((item, index) => React.createElement(\"div\", {\n    className: \"list-card\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-card-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, item.title)));\n  return React.createElement(StyledCardItems, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, cardItems);\n};\n\nconst StyledCardItems = styled.div`\n    flex: 1 1 auto;\n    margin-bottom: 0;\n    overflow-y: auto;\n    overflow-x: hidden;\n    padding: 0 4px;\n    z-index: 1;\n    min-height: 0;\n\n    .list-card {\n        background-color: #fff;\n        border-radius: 3px;\n        box-shadow: 0 1px 0 rgba(9,30,66,.25);\n        cursor: pointer;\n        display: block;\n        margin-bottom: 8px;\n        max-width: 300px;\n        min-height: 20px;\n        position: relative;\n        text-decoration: none;\n        z-index: 0;\n\n        &:hover {\n            background-color: #f4f5f7;\n        }\n    }\n\n    .list-card-detail {\n        padding: 6px 8px;\n        margin: 0 0 4px;\n        overflow: hidden;\n        text-decoration: none;\n        word-wrap: break-word;\n    }\n\n`;\nexport default CardItems;","map":{"version":3,"sources":["/Users/Jinn/Documents/Works/2019/trello-alike/src/components/CardItems.js"],"names":["React","styled","CardItems","props","cardItems","map","item","index","title","StyledCardItems","div"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAMC,SAAS,GAAGD,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KACjC;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCD,IAAI,CAACE,KAAxC,CADH,CADa,CAAlB;AAMA,SACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,SADL,CADJ;AAKH,CAZD;;AAcA,MAAMK,eAAe,GAAGR,MAAM,CAACS,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAnC;AAqCA,eAAeR,SAAf","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\n\n// The styled method works perfectly on all of your own or any third-party component, as long as they attach the passed className prop to a DOM element.\nconst CardItems = (props) => {\n    const cardItems = props.cardItems.map((item, index) => \n        (<div className=\"list-card\" key={index}>\n            <div className=\"list-card-detail\">{item.title}</div>\n        </div>)\n    )\n\n    return (\n        <StyledCardItems>\n            {cardItems}\n        </StyledCardItems>\n    )\n}\n\nconst StyledCardItems = styled.div`\n    flex: 1 1 auto;\n    margin-bottom: 0;\n    overflow-y: auto;\n    overflow-x: hidden;\n    padding: 0 4px;\n    z-index: 1;\n    min-height: 0;\n\n    .list-card {\n        background-color: #fff;\n        border-radius: 3px;\n        box-shadow: 0 1px 0 rgba(9,30,66,.25);\n        cursor: pointer;\n        display: block;\n        margin-bottom: 8px;\n        max-width: 300px;\n        min-height: 20px;\n        position: relative;\n        text-decoration: none;\n        z-index: 0;\n\n        &:hover {\n            background-color: #f4f5f7;\n        }\n    }\n\n    .list-card-detail {\n        padding: 6px 8px;\n        margin: 0 0 4px;\n        overflow: hidden;\n        text-decoration: none;\n        word-wrap: break-word;\n    }\n\n`\n\nexport default CardItems;"]},"metadata":{},"sourceType":"module"}