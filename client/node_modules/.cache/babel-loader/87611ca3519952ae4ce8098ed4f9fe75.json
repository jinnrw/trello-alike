{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/Jinn/Documents/Works/2019/trello-alike/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _toConsumableArray from\"/Users/Jinn/Documents/Works/2019/trello-alike/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/Jinn/Documents/Works/2019/trello-alike/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    flex: 1 1 auto;\\n    margin-bottom: 0;\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    padding: 0 4px;\\n    z-index: 1;\\n    min-height: 0;\\n\\n    .list-card {\\n        background-color: #fff;\\n        border-radius: 3px;\\n        box-shadow: 0 1px 0 rgba(9,30,66,.25);\\n        cursor: pointer;\\n        display: block;\\n        margin-bottom: 8px;\\n        max-width: 300px;\\n        min-height: 20px;\\n        position: relative;\\n        text-decoration: none;\\n        z-index: 0;\\n\\n        &:hover {\\n            background-color: #f4f5f7;\\n        }\\n\\n        &:hover .edit-card {\\n            display: block;\\n        }\\n    }\\n\\n    .list-card-detail {\\n        display: flex;\\n        justify-content: space-between;\\n        padding: 6px 8px;\\n        margin: 0 0 4px;\\n        overflow: hidden;\\n        text-decoration: none;\\n        word-wrap: break-word;\\n    }\\n\\n    .edit-card {\\n        display: none;\\n        width: 20px;\\n        height: 20px;\\n        background-color: #f4f5f7;\\n        background-clip: padding-box;\\n        background-origin: padding-box;\\n        border-radius: 3px;\\n        opacity: .8;\\n        padding: 4px;\\n        position: absolute;\\n        right: 2px;\\n        top: 2px;\\n        background: url(./icon-pencil.svg) 50% 50% no-repeat;\\n        background-size: 16px;\\n\\n        &:hover {\\n            background-color: #ebecf0;\\n            opacity: 1;\\n        }\\n    }\\n\\n    .quick-card-editor {\\n        overflow: hidden;\\n        overflow-wrap: break-word;\\n        resize: none;\\n        background: #ebecf0;\\n        \\n        button {\\n            margin: 8px;\\n        }\\n    }\\n\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useRef,useState,useEffect}from'react';import styled from\"styled-components\";import TextArea from\"../styled-components/TextArea\";import{Button}from\"../styled-components/Buttons\";var CardItems=function CardItems(props){// init states\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditingCard=_useState2[0],setIsEditingCard=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),currentEditingIndex=_useState4[0],setCurrentEditingIndex=_useState4[1];var _useState5=useState(_toConsumableArray(props.cardItems)),_useState6=_slicedToArray(_useState5,2),newCardItems=_useState6[0],setNewCardItems=_useState6[1];useEffect(function(){if(isEditingCard&&!(currentEditingIndex===null)){quickEditorTextarea.current.focus();quickEditorTextarea.current.value=props.cardItems[currentEditingIndex].title;}},[currentEditingIndex]);var quickEditorTextarea=useRef();function editCardTitle(index){if(!isEditingCard){setIsEditingCard(true);setCurrentEditingIndex(index);}}function updateCardItem(e){quickEditorTextarea.current.value=e.target.value;}function onkeydownTextArea(e,index){if(e.keyCode===13){saveEditor();e.preventDefault();}else if(e.keyCode===27){// Escape key\ncancelEditor();e.preventDefault();}}function saveEditor(){newCardItems[currentEditingIndex].title=quickEditorTextarea.current.value;setNewCardItems(newCardItems);setIsEditingCard(false);setCurrentEditingIndex(null);}function cancelEditor(){// return previous state\nsetNewCardItems(function(prev){return prev;});setIsEditingCard(false);setCurrentEditingIndex(null);}var singleCardItem=function singleCardItem(item,index){return React.createElement(\"div\",{className:\"list-card\",key:index},React.createElement(\"div\",{className:\"list-card-detail\"},React.createElement(\"div\",null,item.title),React.createElement(\"div\",{className:\"edit-card\",onClick:function onClick(){editCardTitle(index);}})));};var quickEditor=function quickEditor(index){return React.createElement(\"div\",{className:\"quick-card-editor\",key:index},React.createElement(TextArea,{ref:quickEditorTextarea,onChange:function onChange(e){updateCardItem(e);},onKeyDown:function onKeyDown(e){onkeydownTextArea(e);}}),React.createElement(Button,{onClick:function onClick(){saveEditor();}},\"Save\"));};// Return all card items\nvar cardItems=props.cardItems.map(function(item,index){return isEditingCard?index===currentEditingIndex?quickEditor(index):singleCardItem(item,index):singleCardItem(item,index);});return React.createElement(StyledCardItems,null,cardItems);};var StyledCardItems=styled.div(_templateObject());export default CardItems;","map":{"version":3,"sources":["/Users/Jinn/Documents/Works/2019/trello-alike/client/src/components/CardItems.js"],"names":["React","useRef","useState","useEffect","styled","TextArea","Button","CardItems","props","isEditingCard","setIsEditingCard","currentEditingIndex","setCurrentEditingIndex","cardItems","newCardItems","setNewCardItems","quickEditorTextarea","current","focus","value","title","editCardTitle","index","updateCardItem","e","target","onkeydownTextArea","keyCode","saveEditor","preventDefault","cancelEditor","prev","singleCardItem","item","quickEditor","map","StyledCardItems","div"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport TextArea from \"../styled-components/TextArea\"\nimport { Button } from \"../styled-components/Buttons\"\n\nconst CardItems = (props) => {\n    // init states\n    const [isEditingCard, setIsEditingCard] = useState(false);\n    const [currentEditingIndex, setCurrentEditingIndex] = useState(null);\n    const [newCardItems, setNewCardItems] = useState([...props.cardItems]);\n\n    useEffect(() => {\n        if (isEditingCard && !(currentEditingIndex === null)) {\n            quickEditorTextarea.current.focus();\n            quickEditorTextarea.current.value = props.cardItems[currentEditingIndex].title;\n        }\n    }, [currentEditingIndex])\n\n    let quickEditorTextarea = useRef();\n\n    function editCardTitle(index) {\n        if (!isEditingCard) {\n            setIsEditingCard(true);\n            setCurrentEditingIndex(index);\n        }\n    }\n\n    function updateCardItem(e) {\n        quickEditorTextarea.current.value = e.target.value;\n    }\n\n    function onkeydownTextArea(e, index) {\n        if (e.keyCode === 13) {\n            saveEditor();\n            e.preventDefault();\n        } else if (e.keyCode === 27) { // Escape key\n            cancelEditor();\n            e.preventDefault();\n        }\n\n    }\n\n    function saveEditor() {\n        newCardItems[currentEditingIndex].title = quickEditorTextarea.current.value\n        setNewCardItems(newCardItems);\n        setIsEditingCard(false);\n        setCurrentEditingIndex(null);\n    }\n\n    function cancelEditor() {\n        // return previous state\n        setNewCardItems(prev => prev);\n        setIsEditingCard(false);\n        setCurrentEditingIndex(null);\n    }\n\n    const singleCardItem = (item, index) =>\n        (<div className=\"list-card\" key={index} >\n            <div className=\"list-card-detail\">\n                <div>{item.title}</div>\n                <div className=\"edit-card\"\n                    onClick={() => {\n                        editCardTitle(index);\n                    }}>\n                </div>\n            </div>\n        </div >)\n\n    const quickEditor = (index) =>\n        (<div className=\"quick-card-editor\" key={index}>\n            <TextArea\n                ref={quickEditorTextarea}\n                onChange={(e) => {\n                    updateCardItem(e);\n                }}\n                onKeyDown={(e) => {\n                    onkeydownTextArea(e)\n                }} />\n            <Button onClick={() => { saveEditor() }}>Save</Button>\n        </div>)\n\n\n    // Return all card items\n    const cardItems = props.cardItems.map((item, index) =>\n        (isEditingCard ?\n            (index === currentEditingIndex ?\n                quickEditor(index) :\n                singleCardItem(item, index)\n            )\n            : singleCardItem(item, index)\n        )\n    )\n\n    return (\n        <StyledCardItems>\n            {cardItems}\n        </StyledCardItems>\n    )\n}\n\nconst StyledCardItems = styled.div`\n    flex: 1 1 auto;\n    margin-bottom: 0;\n    overflow-y: auto;\n    overflow-x: hidden;\n    padding: 0 4px;\n    z-index: 1;\n    min-height: 0;\n\n    .list-card {\n        background-color: #fff;\n        border-radius: 3px;\n        box-shadow: 0 1px 0 rgba(9,30,66,.25);\n        cursor: pointer;\n        display: block;\n        margin-bottom: 8px;\n        max-width: 300px;\n        min-height: 20px;\n        position: relative;\n        text-decoration: none;\n        z-index: 0;\n\n        &:hover {\n            background-color: #f4f5f7;\n        }\n\n        &:hover .edit-card {\n            display: block;\n        }\n    }\n\n    .list-card-detail {\n        display: flex;\n        justify-content: space-between;\n        padding: 6px 8px;\n        margin: 0 0 4px;\n        overflow: hidden;\n        text-decoration: none;\n        word-wrap: break-word;\n    }\n\n    .edit-card {\n        display: none;\n        width: 20px;\n        height: 20px;\n        background-color: #f4f5f7;\n        background-clip: padding-box;\n        background-origin: padding-box;\n        border-radius: 3px;\n        opacity: .8;\n        padding: 4px;\n        position: absolute;\n        right: 2px;\n        top: 2px;\n        background: url(./icon-pencil.svg) 50% 50% no-repeat;\n        background-size: 16px;\n\n        &:hover {\n            background-color: #ebecf0;\n            opacity: 1;\n        }\n    }\n\n    .quick-card-editor {\n        overflow: hidden;\n        overflow-wrap: break-word;\n        resize: none;\n        background: #ebecf0;\n        \n        button {\n            margin: 8px;\n        }\n    }\n\n`\n\nexport default CardItems;"]},"metadata":{},"sourceType":"module"}