{"ast":null,"code":"import _slicedToArray from \"/Users/Jinn/Documents/Works/2019/trello-alike/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jinn/Documents/Works/2019/trello-alike/client/src/components/BoardCanvas.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport CardLists from './CardLists';\nimport CardItems from './CardItems';\nimport CardComposer from './CardComposer'; // const responseData = [{\n//     list_title: \"To Do\",\n//     list_items: [\n//         {\n//             title: \"do this\",\n//             completed: false,\n//         },\n//         {\n//             title: \"do that\",\n//             completed: false,\n//         },\n//         {\n//             title: \"push to github\",\n//             completed: false,\n//         }\n//     ]\n// }, {\n//     list_title: \"Done\",\n//     list_items: [\n//         {\n//             title: \"buy milk\",\n//             completed: false,\n//         },\n//         {\n//             title: \"overcooked dinner\",\n//             completed: false,\n//         },\n//         {\n//             title: \"save your code\",\n//             completed: false,\n//         }\n//     ]\n// }\n// ]\n\nconst BoardCanvas = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        lists = _useState2[0],\n        setLists = _useState2[1]; // componentDidmount, use [] as second argument\n\n\n  useEffect(() => {\n    fetch('/api/lists').then(res => res.json()).then(data => {\n      setRes(data);\n    });\n  }, []);\n  let renderLists = responseData.map((list, index) => React.createElement(CardLists, {\n    list_title: list.list_title,\n    list_items: list.list_items,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n  return React.createElement(StyledBoardCanvas, {\n    id: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, renderLists);\n};\n\nconst StyledBoardCanvas = styled.div`\n    display: flex;\n    padding: 8px 4px 4px 8px;\n`;\nexport default BoardCanvas;","map":{"version":3,"sources":["/Users/Jinn/Documents/Works/2019/trello-alike/client/src/components/BoardCanvas.js"],"names":["React","styled","CardLists","CardItems","CardComposer","BoardCanvas","useState","lists","setLists","useEffect","fetch","then","res","json","data","setRes","renderLists","responseData","map","list","index","list_title","list_items","StyledBoardCanvas","div"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACIC,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,QACfC,KADe;AAAA,QACRC,QADQ,kBAGtB;;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAAC,YAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVC,MAAAA,MAAM,CAACD,IAAD,CAAN;AACH,KAJL;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,MAAIE,WAAW,GAAGC,YAAY,CAACC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAC/B,oBAAC,SAAD;AACI,IAAA,UAAU,EAAED,IAAI,CAACE,UADrB;AAEI,IAAA,UAAU,EAAEF,IAAI,CAACG,UAFrB;AAGI,IAAA,GAAG,EAAEF,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAlB;AAQA,SACI,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,WADL,CADJ;AAKH,CAzBD;;AA2BA,MAAMO,iBAAiB,GAAGtB,MAAM,CAACuB,GAAI;;;CAArC;AAKA,eAAenB,WAAf","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nimport CardLists from './CardLists';\nimport CardItems from './CardItems';\nimport CardComposer from './CardComposer';\n\n// const responseData = [{\n//     list_title: \"To Do\",\n//     list_items: [\n//         {\n//             title: \"do this\",\n//             completed: false,\n//         },\n//         {\n//             title: \"do that\",\n//             completed: false,\n//         },\n//         {\n//             title: \"push to github\",\n//             completed: false,\n//         }\n//     ]\n// }, {\n//     list_title: \"Done\",\n//     list_items: [\n//         {\n//             title: \"buy milk\",\n//             completed: false,\n//         },\n//         {\n//             title: \"overcooked dinner\",\n//             completed: false,\n//         },\n//         {\n//             title: \"save your code\",\n//             completed: false,\n//         }\n//     ]\n// }\n// ]\n\nconst BoardCanvas = () => {\n    const [lists, setLists] = useState([]);\n\n    // componentDidmount, use [] as second argument\n    useEffect(() => {\n        fetch('/api/lists')\n            .then(res => res.json())\n            .then(data => {\n                setRes(data);\n            })\n    }, [])\n\n    let renderLists = responseData.map((list, index) => (\n        <CardLists\n            list_title={list.list_title}\n            list_items={list.list_items}\n            key={index} />\n\n    ))\n\n    return (\n        <StyledBoardCanvas id=\"board\">\n            {renderLists}\n        </StyledBoardCanvas>\n    )\n}\n\nconst StyledBoardCanvas = styled.div`\n    display: flex;\n    padding: 8px 4px 4px 8px;\n`\n\nexport default BoardCanvas;"]},"metadata":{},"sourceType":"module"}